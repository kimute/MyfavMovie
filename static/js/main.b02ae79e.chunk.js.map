{"version":3,"sources":["assets/default.png","Components/Section.js","Components/Loader.js","Components/Notice.js","Components/MoviePoster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeCont.js","Routes/Movie/MyMoivePresenter.js","Routes/Movie/index.js","Routes/Movie/MyMovieCont.js","Routes/Detail/DetailPresnter.js","Routes/Detail/index.js","Routes/Detail/DetailCont.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchCon.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","Grid","Section","title","children","icon","faCompactDisc","spin","faSpinner","Text","span","props","color","Notice","text","Image","bgUrl","Rating","ContainerForImage","Year","MovePoster","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","faStar","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","MoviePoster","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","process","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","HomeContainer","state","data","results","this","setState","React","Component","MyMoviePresenter","favorate","unfavorate","MyMovieContainer","Backdrop","bgImage","Content","Cover","Data","h3","InfoContainer","InfoItem","Divider","HomePage","a","OverView","p","VideoView","DetailPresenter","result","backdrop_path","original_name","runtime","genres","genre","index","name","href","homepage","production_companies","overview","url","videos","key","playing","controls","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Form","form","Input","input","SearchPresenter","searchResult","searchQuery","handleSubmit","updateQuery","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByQuery","Header","header","List","ul","Item","li","current","Slink","Link","withRouter","path","exact","component","Home","Movie","Detail","Search","from","globalStyle","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b02ae79e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default.c5771baf.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompactDisc } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n   :not(:last-child) {\n       margin-bottom: 50px;\n   }\n`;\n\nconst Title = styled.div`\n   font-size: 18px;\n   font-weight: 600;\n\n`;\n\nconst Grid = styled.div`\n   margin-top: 25px;\n   display: grid;\n   grid-template-columns: repeat(auto-fill, 125px);\n   grid-gap: 25px;\n`;\n\n//children :reserved react props (to put inside of div)\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title} <FontAwesomeIcon icon={faCompactDisc} spin/></Title>\n    \n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node), \n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n   height: 100vh;\n   width: 100vw;\n   display: flex;\n   justify-content: center;\n   font-size: 28px;\n   margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span>\n        <FontAwesomeIcon icon={faSpinner} spin />\n        </span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n// send a message when find nothing or occur error\n//エラーメッセージ表示機能\n\n// css\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Notice =( { text, color} ) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nNotice.propTypes = {\n    text:PropTypes.string.isRequired,\n    color:PropTypes.string.isRequired\n};\n\nexport default Notice;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\n// show movie poster\n// 各Presenter(Home,Movie, Search)で　Poster viewを表示の為使われる\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height:180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition:opacity 0.2s ease-in-out;\n`;\nconst Rating = styled.div`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity:0;\n    transition: opacity 0.1s linear;\n`;\nconst ContainerForImage = styled.div`\n    margin-bottom: 6px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.2;\n        }\n        ${Rating} {\n            opacity: 1;\n            span {\n                l:2px;\n                color: yellow;\n            }\n        }\n    }\n`;\nconst Title = styled.div`\n    display: block;\n    margin-bottom:3px;\n`;\nconst Year = styled.div`\n    font-size: 11px;\n    color: #59dae2;\n`;\n\nconst MovePoster = ( {id, imageUrl, title, rating, year, isMovie = false} ) => (\n<Link to={isMovie? `/movie/${id} `:`/`}>\n    <Container>\n        <ContainerForImage>\n            <Image \n              bgUrl={ \n                imageUrl \n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                : require(\"../assets/default.png\") } />\n            <Rating>\n                <span role=\"img\" aria-label=\"rating\">\n                <FontAwesomeIcon icon={faStar}/>\n                </span> {rating}/10\n            </Rating>\n        </ContainerForImage>\n        <Title>{title.length >18 ? `${title.substring(0, 18)}...`: title}</Title>\n        <Year>{year}</Year>\n    </Container>\n</Link>\n);\n\nMovePoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string\n}\n\nexport default MovePoster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Notice from \"../../Components/Notice\";\nimport MoviePoster from \"../../Components/MoviePoster\";\n\n//show Home\nconst Container = styled.div`\n   padding:20px;\n`;\n\nconst HomePresenter = ( {\n    nowPlaying,\n    upcoming,\n    popular,\n    error,\n    loading,\n\n} ) => loading ? ( \n    <Loader />\n) : (\n<Container>\n    {nowPlaying && nowPlaying.length > 0 && ( \n    <Section title=\"Now playing\">\n        {nowPlaying.map(movie => (\n            <MoviePoster \n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path} \n              title={movie.original_title} \n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n        ))}\n    </Section>\n    )}\n    {popular && popular.length > 0 && ( \n    <Section title=\"Popular Movies\">\n        {popular.map(movie => (\n            <MoviePoster \n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path} \n              title={movie.original_title} \n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n        ))}\n    </Section>\n    )}\n    {upcoming && upcoming.length > 0 && ( \n    <Section title=\"Upcoming Movies\">\n        {upcoming.map(movie => (\n             <MoviePoster \n               key={movie.id}\n               id={movie.id}\n               imageUrl={movie.poster_path} \n               title={movie.original_title} \n               rating={movie.vote_average}\n               year={movie.release_date && movie.release_date.substring(0, 4)}\n               isMovie={true}\n             />\n        ))}\n    </Section>\n    )}\n    {error && <Notice color=\"#e74c3c\" text={error} />}\n</Container>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming:PropTypes.array ,\n    popular:PropTypes.array,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired\n}\nexport default HomePresenter;","import axios from \"axios\";\n\nconst My_Api_Key = process.env.REACT_APP_API_KEY; \nconst api = axios.create({\n    baseURL:\"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: My_Api_Key,\n        language: \"en-US\"\n    }\n});\n\n//get JSON parameters from API\n/*\nAPIから習得した値は以下のように使用 \n　　HOME:\n    - nowPlaying(): to show now playing movies\n    - upcoming(): to show upcoming movies\n    - popular(): to show popular movies\n\n    MOVIE：\n    -favorate():show favorate movie\n    -unfavorate():show unfavorate movie\n\n    SEARCH：\n    - serach: to search movies by keyword\n\n    - movieDetail():映画の詳細を表示\n\n*/\nexport const moviesApi = {\n    nowPlaying:() =>api.get(\"movie/now_playing\"),\n    upcoming:() => api.get(\"movie/upcoming\"),\n    popular:() => api.get(\"movie/popular\"),\n    //movie detail\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/movie\", {\n        params: {\n            query:encodeURIComponent(term)\n        }\n    }),\n    favorate:() =>api.get(\"movie/top_rated\"),\n    unfavorate:() => api.get(\"search/movie\", {\n        params: {\n            query:encodeURIComponent(\"horror\")\n        }\n    }) \n};\n\n","import HomeContainer from \"./HomeCont\";\n//this index for export Container (Container pattern) \n\nexport default HomeContainer;","import React from 'react'\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\n//container Component for Home\nexport default class extends React.Component {\n    state ={\n        nowPlaying: null,\n        upcoming: null,\n        popular:null,\n        error:null,\n        loading: true\n    };\n\n    //API call\n    async componentDidMount() {\n        try {\n            //change var. name : results to nowPlaying \n            const { \n                data: { results: nowPlaying } \n            } = await moviesApi.nowPlaying();\n            const { \n                data: { results: upcoming } \n            } = await moviesApi.upcoming();\n            const { \n                data: { results: popular } \n            } = await moviesApi.popular();\n           \n            this.setState( {\n                nowPlaying,\n                upcoming,\n                popular\n            } );\n        } catch {\n            this.setState({\n                error: \"Can't find movies\"\n            });\n        }finally {\n            this.setState({\n                loading: false\n            })\n\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular,error, loading } = this.state;\n        return <HomePresenter \n                 nowPlaying={nowPlaying} \n                 upcoming={upcoming} \n                 popular={popular} \n                 error={error} \n                 loading={loading}\n                 />\n}\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport MoviePoster from \"../../Components/MoviePoster\";\n\nconst Container = styled.div`\n   padding:20px;\n`;\n\nconst MyMoviePresenter = ( {\n    favorate,\n    unfavorate,\n    error,\n    loading,\n\n} ) => loading ? ( \n    <Loader />\n) : (\n<Container>\n    {favorate && favorate.length > 0 && ( \n    <Section title=\"My Favorate Movie\">\n        {favorate.map(movie => (\n            <MoviePoster \n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path} \n              title={movie.original_title} \n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n        ))}\n    </Section>\n    )}\n    {favorate && favorate.length > 0 && ( \n    <Section title=\"My UnFavorate Movie\">\n        {unfavorate.map(movie => (\n            <MoviePoster \n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path} \n              title={movie.original_title} \n              rating={movie.vote_average}\n              year={movie.release_date && movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n        ))}\n    </Section>\n    )}\n</Container>\n);\n\nMyMoviePresenter.propTypes = {\n    favorate: PropTypes.array,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired\n}\nexport default MyMoviePresenter;\n\n","import { moviesApi } from \"../../api\";\nimport MyMovieContainer from \"./MyMovieCont\";\n\nexport default MyMovieContainer;\n\n//for show my favorate Movie\n","import React from 'react'\nimport MoviePresenter from \"./MyMoivePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state ={\n        favorate: null,\n        unfavorate: null,\n        error:null,\n        loading: true\n    };\n    //API call\n    async componentDidMount() {\n        try {\n            //change var. name : results to nowPlaying \n            const { \n                data: { results: favorate } \n            } = await moviesApi.favorate();\n            const { \n                data: { results: unfavorate } \n            } = await moviesApi.unfavorate();\n            //throw Error();\n            //setState\n            this.setState( {\n                favorate,\n                unfavorate\n            } );\n        } catch {\n            this.setState({\n                error: \"Can't find movies\"\n            });\n        }finally {\n            this.setState({\n                loading: false\n            })\n\n        }\n    }\n\n    render() {\n        const { favorate, unfavorate, error, loading } = this.state;\n        //console.log(this.state);\n        return <MoviePresenter \n                 favorate={favorate} \n                 unfavorate={unfavorate} \n                 error={error} \n                 loading={loading}\n                 />\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport ReactPlayer from \"react-player\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\n\n\n// show details\n// css\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n// for backgroud image blur\nconst Backdrop = styled.div`\n   position: absolute;\n   top: 0;\n   left: 0;\n   width: 100%;\n   height: 100%;\n   background-image: url(${props => props.bgImage});\n   background-position: center center;\n   background-size: cover;\n   filter: blur(4px);\n   opacity: 0.5;\n   z-index: 0;\n`;\n\nconst Content = styled.div`\n   display: flex;\n   width: 100%;\n   position: relative;\n   height: 100%;\n   z-index: 1;\n`;\n\nconst Cover = styled.div`\n   width: 30%;\n   background-image: url(${props => props.bgImage});\n   background-position: center center;\n   background-size: cover;\n   height: 100%;\n   border-radius: 5px;\n`;\n\nconst Data = styled.div`\n   width: 70%;\n   margin-left: 10px;\n`;\nconst Title = styled.h3`\n   font-size: 32px;\n   margin-bottom: 10px;\n`;\n\nconst InfoContainer = styled.div`\n   margin 18px 0;\n`;\n\nconst InfoItem = styled.span``;\n\nconst Divider = styled.span`\n   margin: 0 10px;\n`;\nconst HomePage = styled.a`\n   color:#59dae2;\n   &:hover {\n       color: crimson;\n   }\n`;\n\nconst OverView = styled.p`\n   font-size: 14px;\n   opacity: 0.8;\n   line-height: 2;\n   widh:48%;\n`;\n\nconst VideoView = styled.div`\n   margin-top:50px;\n`;\n\nconst DetailPresenter = ( { result, error, loading } ) => \n    loading ? (\n        <Loader />\n    ) : (\n      <Container>\n          <Backdrop \n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n          />\n          <Content>\n              <Cover bgImage={ result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/default.png\")}/>\n              <Data>\n                  <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                  <InfoContainer>\n                      <InfoItem>\n                          {result.release_date.substring(0, 4)}\n                      </InfoItem>\n                      <Divider>・</Divider>\n                      <InfoItem>\n                          {result.runtime} min.\n                      </InfoItem>\n                      <Divider>・</Divider>\n                      <InfoItem>\n                          {result.genres && result.genres.map((genre, index) =>\n                             index === result.genres.length -1 ? genre.name : `${genre.name} /`)}\n                      </InfoItem>\n                      <Divider>・</Divider>\n                      <InfoItem>\n                          <HomePage>\n                          <a href={result.homepage}>\n                              {result.production_companies[0].name }</a>\n                          </HomePage>\n                        </InfoItem>\n                        <Divider>・</Divider>\n                      <InfoItem>\n                      <span role=\"img\" aria-label=\"rating\">\n                <FontAwesomeIcon icon={faStar}/>\n                </span> {result.vote_average} / 10\n                      </InfoItem>\n                  </InfoContainer>\n                  <OverView>{result.overview}</OverView>\n                  <VideoView>\n                  <ReactPlayer url={`https://www.youtube.com/watch?v=${result.videos.results[0].key}`} playing controls />\n                  </VideoView>\n              </Data>\n          </Content>\n      </Container>\n    );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    error: PropTypes.string,\n    loading:PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailCont\";\n\nexport default DetailContainer;","//container Component for Home\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresnter\";\nimport { moviesApi } from \"../../api\";\n\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this. state = {\n            result:null,     \n            error:null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    } \n   \n    //get id\n    async componentDidMount() {\n        const { \n            match: { \n                params: {id}\n            },\n            history: { push },\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if(isMovie) {\n                /*const req = await moviesApi.movieDetail(parsedId);\n                result = req.data;*/\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            }       \n        } catch {\n            this.setState( { error: \"Can't find !\"} )\n        } finally {\n            this.setState ( { loading: false, result })\n        }\n    }\n\n    render() {\n        // see default props\n        const { result, error, loading } = this.state;\n        console.log(result);\n        return <DetailPresenter result={result} error={error} loading={loading} />; \n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Notice from \"../../Components/Notice\";\nimport MoviePoster from \"../../Components/MoviePoster\";\n\n// Presenterviewの役：search container からもらった値を画面上に表示\n\n//css\nconst Container =styled.div`\n   padding: 20px;\n`;\n\nconst Form =styled.form`\n   margin-bottom: 50px;\n   width: 100%\n`;\n\nconst Input =styled.input`\n   all: unset;\n   font-size: 28px;\n   width: 100%;\n\n`;\n\nconst SearchPresenter = ( {\n    searchResult,\n    searchQuery,\n    error,\n    loading,\n    handleSubmit,\n    updateQuery\n\n} ) => (<Container>\n    <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies...\" value={searchQuery} onChange={updateQuery}/>\n    </Form>\n    {loading ? (\n     <Loader /> \n    ) : (\n     <>\n      {searchResult && searchResult.length > 0 && (<Section title=\"Search Results\">{searchResult.map(movie =>(\n          <MoviePoster \n          key={movie.id}\n          id={movie.id}\n          imageUrl={movie.poster_path} \n          title={movie.original_title} \n          rating={movie.vote_average}\n          year={movie.release_date && movie.release_date.substring(0, 4)}\n          isMovie={true}\n        />\n      ))}</Section>)}\n      {error && <Notice color=\"#59dae2\" text={error} />}\n      {searchResult && searchResult.length === 0 && (<Notice text=\"not found !!!\" color=\"#59dae2\" />)}\n\n    </>)}\n</Container>\n);\n\nSearchPresenter.propTypes = {\n    searchResult: PropTypes.array,\n    searchQuery:PropTypes.string ,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired,\n    handleSubmit:PropTypes.func.isRequired,\n    updateQuery:PropTypes.func.isRequired\n}\nexport default SearchPresenter;","//this index for export Container (Container pattern) \n\nimport SearchContainer from \"./SearchCon\";\n\nexport default SearchContainer;","//container Component for Home\nimport React from 'react'\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state ={\n        searchResult: null,\n        searchQuery: \"\",\n        error:null,\n        loading: false\n    };\n\n    updateQuery = event =>{\n        const { \n            target: { value }\n        } = event;\n        this.setState( {\n            searchQuery: value\n        });\n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n        const { searchQuery } = this.state;\n        if(searchQuery !==\"\"){\n            this.searchByQuery();\n        }\n    };\n    // searchByQuery:入力したキーワード(searchQuery)から検査する関数\n    searchByQuery = async () => {\n        const { searchQuery } = this.state;\n        this.setState({ loading:true })\n        try {\n            const { \n                data: { results: searchResult }\n            } = await moviesApi.search(searchQuery);\n            this.setState( {\n                searchResult\n            });\n        } catch {\n            this.setState({ error: \"Can't find result \"});\n        } finally {\n            this.setState( { loading: false} );\n        }\n    };\n\n    render() {\n        const { searchResult, searchQuery, error, loading } = this.state;\n        return <SearchPresenter \n                 searchResult={searchResult} \n                 searchQuery={searchQuery}  \n                 error={error} \n                 loading={loading}\n                 handleSubmit={this.handleSubmit}\n                 updateQuery={this.updateQuery}\n                 />\n    }\n}","import React from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    algin-items:center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index:10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width:80px;\n    height:50px;\n    text-align:center;\n    border-bottom:5px solid ${props =>(props.current ? \"#3498db\" :\"transparent\")};\n    transition:　 border-bottom 0.5s ease-in-out;\n\n`;\n\nconst Slink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items:center;\n    justify-content: center;\n`;\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname ===\"/\"}>\n                <Slink to=\"/\">Home</Slink>\n            </Item>\n            <Item current={pathname ===\"/favmovie\"}>\n                <Slink to=\"/favmovie\">Movie</Slink>\n            </Item>\n            <Item current={pathname ===\"/search\"}>\n                <Slink to=\"/search\">Search</Slink>\n            </Item>\n        </List>\n    </Header>\n));\n\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport Movie from \"../Routes/Movie\";\nimport Detail from \"../Routes/Detail\";\nimport Search from \"../Routes/Search\";\nimport Header from \"./Header\";\nexport default () =>(\n    <Router>\n      <>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n        　　 <Route path=\"/favmovie\" component={Movie} />\n        　　 <Route path=\"/movie/:id\" component={Detail} />\n        　　 <Route path=\"/search\" component={Search} />\n        　　 <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </>\n    </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:17px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyle;","import React, {Component} from 'react'\nimport Router from \"../Components/Router\";\nimport GlobalStyle from \"../Components/GlobalStyles\";\n\n\nclass App extends Component {\n  render() {\n    return (\n       <>\n         <Router />\n         <GlobalStyle />\n       </>);\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./Components/App\";\n//test\n//import \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n"],"sourceRoot":""}